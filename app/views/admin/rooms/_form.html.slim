.jumbotron.small.red
  .j_content
    - if room.name
      h1 MODIFICA DI #{room.name}
    - else
      h1 NUOVA STANZA

.back_button_container
  a.back_button href=admin_rooms_path Torna alle Stanze


.grid
  .row
    .col.single-page
      .card
        .card_title.red
          - if room.name
            .ct_title MODIFICA DI #{room.name}
          - else
            .ct_title NUOVA STANZA
        .card_content
          = form_for room, url: url do |f|
            - if room.errors.any?
              h2
                = pluralize(room.errors.count, "error") 
                = " prevented this record from being saved:"
            - room.errors.full_messages.each do |msg|
              = msg
              br
            .flex
              .input_container.flex-item
                label NOME STANZA
                = f.text_field :name
              .input_container.flex-item
                label CATEGORIA STANZA
                .select-wrapper
                  = f.select :room_category_id, RoomCategory.all.collect { |rc| [rc.name, rc.id] }, {}, { :class => 'select-dropdown' }

            .input_container
              label INDIRIZZO STANZA
              = f.text_field :address

            .flex
              .input_container.flex-item
                label DATA DI APERTURA
                = f.text_field :start_date
              .input_container.flex-item
                label DATA DI CHIUSURA
                = f.text_field :end_date

            .input_container
              label DESCRIZIONE STANZA
              = f.text_area :description

            .input_container
              label PREZZO
              = f.number_field :price, min: 0

            .flex
              .input_container.flex-item
                label NUMERO DI TELEFONO
                = f.text_field :phone
              .input_container.flex-item
                label SITO INTERNET
                = f.text_field :website

            .flex
              .input_container.flex-item
                label PAGINA FACEBOOK  (url)
                = f.text_field :facebook
              .input_container.flex-item
                label PROFILO TWITTER  (url)
                = f.text_field :twitter

            .flex
              .input_container.flex-item
                label PROFILO INSTAGRAM (url)
                = f.text_field :instagram
              .input_container.flex-item
                label PAGINA TRIPADVISOR (url)
                = f.text_field :trip_advisor
            
            - if @can_be_school
              .input_container
                label È UNA SCUOLA?
                .checkbox
                  .check_text È UNA SCUOLA
                  = f.check_box :is_school, class: 'is_school_check'
                  = f.label :is_school, class: 'check_toggle'
                    .pin
              
            - if room.is_school
              - should_disply_srs = 'block'
            - else
              - should_disply_srs = 'none'

            #school_room_setting style="display: #{should_disply_srs}"
              = f.fields_for :school_room_setting do |setting|
                = render 'school_room_setting_fields', f: setting

            .input_container
              label FOTO COPERTINA
              #cover-image.uploaded-image
              = f.file_field :background_image, id: 'cover-image-input'

            br

            = f.submit 'SALVA STANZA', class: 'button block red'

coffee:
  # school_room_settings
  is_school_check = document.querySelector('.is_school_check')

  is_school_check.addEventListener 'change', (ev) ->
    if ev.srcElement.checked
      document.querySelector('#school_room_setting').style.display = 'block'
    else
      document.querySelector('#school_room_setting').style.display = 'none'

  # departure datetime

  current_date = new Date().timeNow()

  flatpickr_config = {
    altFormat: "j F Y",
    altInput: true,
    minDate: current_date,
    enableTime: false,
    locale:'it',
    onChange: (selectedDates, dateStr, instance) ->
      setEndDatePicker(selectedDates[0])
  }
  document.getElementById("room_start_date").flatpickr(flatpickr_config)

  # back_departure_datetime
  back_departure_datetime_picker = null

  setEndDatePicker = (end_date) ->
    back_departure_datetime_picker.destroy() if back_departure_datetime_picker

    if end_date
      min_date = end_date
    else
      min_date = current_date

    flatpickr_config = {
      altFormat: "j F Y",
      altInput: true,
      minDate: new Date(min_date - 60000),
      enableTime: false,
      locale:'it'
    }
    end_date_picker = document.getElementById("room_end_date").flatpickr(flatpickr_config)

  setEndDatePicker()

  # cover-image-input
   
  document.getElementById("cover-image-input").onchange = ->
    # image preview
    reader = new FileReader()
    reader.onload = (e) ->
      # get loaded data and render thumbnail.
      document.getElementById("cover-image").classList.add('has_image')
      document.getElementById("cover-image").style.backgroundImage = "url(#{e.target.result})"
    # read the image file as a data URL.
    reader.readAsDataURL(this.files[0])
